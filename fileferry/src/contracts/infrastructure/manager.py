from collections.abc import Callable, Coroutine
from typing import Any, Protocol


class ImportantTaskManagerContract(Protocol):
    async def schedule(
        self,
        key: str,
        task_factory: Callable[[], Coroutine[Any, Any, Any]],
        on_done: Callable[[str, Exception | None], None] | None = None,
    ) -> None: ...

    def has(self, key: str) -> bool: ...
    def keys(self) -> list[str]: ...
    def count(self) -> int: ...
    def age(self, key: str) -> float | None: ...
